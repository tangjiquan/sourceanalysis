#-----------------------------------基本模块 

#user  nobody;# 使用的用户和组
 
# 指定工作进程数  
worker_processes  1;

# 可以使用 [ debug | info | notice | warn | error | crit ]  参数  
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

# 指定 pid 存放的路径
#pid        logs/nginx.pid;





#-----------------------------------事件模块
events {
	#每个worker的最大连接数  
    worker_connections  1024;
}



#-----------------------------------HTTP 模块   
http {

	#包含一个文件描述了：不同文件后缀对应的MIME，见案例分析
    include       mime.types;
    
    #制定默认MIME类型为二进制字节流
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

	#指令 access_log 指派路径、格式和缓存大小
    #access_log  logs/access.log  main;

	#开启调用Linux的sendfile()，提供文件传输效率
    sendfile        on;
    
    #是否允许使用socket的TCP_NOPUSH或TCP_CORK选项  
    #tcp_nopush     on;

	#指定客户端连接保持活动的超时时间，在这个时间之后，服务器会关掉连接
    #keepalive_timeout  0;
    keepalive_timeout  65;

	#设置gzip，压缩文件 
    #gzip  on;

	#服务器的集群
    upstream  netitcast.com {  #服务器集群名字
  		#server   172.16.21.13:8081 weight=1;#服务器配置   weight是权重的意思，权重越大，分配的概率越大。
		#server   192.168.1.186:8081 weight=1;
		server   127.0.0.1:8045 weight=2;
		server   127.0.0.1:8060 weight=1;
		#server   172.16.1.15:80 weight=1;		
	}	
	
	#配置一台虚拟机  
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
